---
alwaysApply: true
---

# Zion 代码组件开发主控制器 Beta

## 🎯 核心使命

基于用户一句话需求，通过智能模式控制，自动化完成Zion组件的完整开发流程。

## 🧠 智能模式控制

### 模式识别与流程调度

#### REQUIREMENT 模式
**触发条件**：
- 用户提出新组件开发需求
- 需求描述不够详细或完整

**执行动作**：
```markdown
引用文件：@zion-requirement-refinement.mdc
**执行动作**：
立即开始执行需求完善流程的第一步，按照"一次一问"原则逐步完善需求，完成后提示用户输入 "PLAN" 生成开发计划
将收集到的账号和密码保存至账号.md，若不存在就创建
```

#### PLAN 模式  
**触发条件**：
- 用户完成需求完善流程并确认开发需求
- 用户输入 "PLAN"

**执行动作**：
```markdown
## 📋 Zion 组件开发计划

### 🎯 需求分析
基于完善后的需求，确定组件开发目标：
- **组件名称**: [从需求中提取的组件名称]
- **核心功能**: [主要功能描述]
- **使用场景**: [具体应用场景]
- **数据需求**: [需要/不需要] 项目数据字段绑定

### 🏗️ 项目规划
- **项目名称**: [项目名称+组件名称]
- **组件名称**: [组件名称（英文）]
- **目标功能**: [基于需求的具体功能实现]
- **开发重点**: [需要重点关注的功能点]

### 🔧 技术方案
基于需求分析确定技术实现方案：
- **组件类型**: [纯UI组件/数据展示组件/交互组件]
- **技术选型**: [基础React/需要图表库/需要动画库/需要第三方SDK]
  - 基础React: 纯UI组件、简单交互
  - 图表库: 数据可视化组件（ECharts/Chart.js）
  - 动画库: 复杂动画效果（Framer Motion/GSAP）
  - 第三方SDK/API: 语音/地图等外部服务
- **复杂度评估**: [简单/中等/复杂] 开发难度
- **关键风险**: [可能遇到的技术难点]

### 📝 执行步骤
**阶段一：环境准备** (步骤1-3)
1. 验证开发环境并确保登录状态
2. 检查当前项目与项目初始化  
3. 项目依赖安装检查流程

**阶段二：组件开发** (步骤4-9)
4. ~~通过 Zion MCP 获取项目配置流程~~（根据需求选择性调用）
5. 开发需求解析确认流程
6. 文件目录生成流程
7. 代码开发流程（三段式接口 + 规范遵循）
8. 将组件按规范导出到项目内的主入口
9. 代码合规校验流程

**阶段三：测试发布** (步骤10-12)
10. 代码组件打包流程执行watch:build
11. 代码组件测试发布（用于Zion编辑器调试）
12. 代码组件帮助文档生成

**阶段四：预览调试** (步骤13-14)
13. 在预览模式下结合 Zion 实时预览调试并修复代码组件，修复完成禁止发布
14. 代码组件正式发布（用户确认无问题后）


**请输入 "ACT" 确认执行此计划**
```

#### ACT 模式
**触发条件**：
- 用户输入 "ACT" 
- 用户提出直接的操作请求

**执行动作**：
```markdown
引用文件：
- @zion-development-workflow.mdc (执行流程)
- @zion-code-standards.mdc (代码规范)
- @zion-graphql-schema-guide.mdc (需要时引用)

执行14步标准开发流程
```


## 🛡️ 核心约束

### 目录唯一性原则
- **智能项目检测**：开始任何操作前必须检查项目状态
- **用户友好交互**：现有项目时询问用户意愿，避免强制决策
- **唯一工作目录**：所有操作均在Zion项目目录内进行

### 规范遵循原则
- **严格遵循Zion平台组件开发规范**
- **三段式接口规范**: PropData、StateData、Event、Props
- **安全检查规范**: propState访问安全、外部API调用安全
- **样式系统规范**: CSS Modules正确使用
- **React Hooks规范**: 依赖数组设置、无限渲染预防
- **禁止自定义决策**: 不能擅自添加模拟数据或精简功能

### 上下文总结
每个步骤执行后记录状态，支持断点续跑和错误恢复。

## 📋 模式切换命令

- **开始需求完善**: 直接提出组件需求
- **生成开发计划**: 输入 "PLAN"
- **执行开发流程**: 输入 "ACT" 
- **查看规范**: 自动引用相关规范文件

---

**注意**: 本文件为主控制器，负责模式识别和流程调度。具体执行逻辑请参考对应的专业文件。